{"version":3,"sources":["common/constants.ts","content/parseContent.ts","components/pixi/Marker.tsx","components/contentModal/YoutubeModalContent.tsx","images/ui/check.svg","components/contentModal/OptionsModalContent.tsx","components/contentModal/IFrameModalContent.tsx","components/contentModal/ConflictModalContent.tsx","components/pixi/Forklift.tsx","components/contentModal/index.tsx","components/pixi/Viewport.tsx","components/pixi/Conveyor.tsx","components/pixi/BigRacks.tsx","components/Main.tsx","components/introModal/introModal.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["ContentType","parsed","rawJson","map","json","type","options","youtube","iframe","conflict","Marker","props","ref","useRef","data","useState","position","PIXI","setPosition","useEffect","gsap","from","current","duration","ease","pixi","visible","scale","delay","bounceAnim","bounce","to","yoyo","repeat","y","Math","random","kill","onDragStart","event","stopPropagation","onDragEnd","undefined","console","log","onDragMove","newPosition","getLocalPosition","parent","anchor","interactive","image","process","mousedown","touchstart","mouseup","mouseupoutside","mousemove","touchmove","YoutubeModalContent","content","url","width","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","_ref2","createElement","_ref3","_ref4","id","className","points","_ref","svgRef","title","x","height","viewBox","style","enableBackground","xmlSpace","ForwardRef","forwardRef","OptionsModalContent","selectedOption","selectOption","description","backgroundImage","bannerImg","option","index","onClick","disabled","IframeModalContent","src","registerPlugin","TextPlugin","Orientation","ConflictModalContent","selectedAnswer","balloonTextRef","text","value","situationSpeech","oldClass","newClass","Linear","easeNone","sound","add","reaction","useMemo","reactions","renderOption","e","element","otherOptions","querySelectorAll","opacity","parentTop","querySelector","getBoundingClientRect","top","childTop","distance","abs","onComplete","setTimeout","correct","play","setCorrectAnswer","handleOptionClick","currentTarget","situationBalloonClass","situationImg","ContentModal","onClose","handleClose","isOpen","ariaHideApp","overlayClassName","onRequestClose","header","renderContent","Viewport","React","app","useApp","cursor","renderer","plugins","interaction","cursorStyles","pointer","PixiComponentViewport","PixiComponent","create","viewport","PixiViewport","screenWidth","screenHeight","worldWidth","worldHeight","ticker","minScale","maxScale","drag","pinch","wheel","clamp","direction","clampZoom","decelerate","boxImagePath","Conveyor","boxContainerRef","boxTexture","setBoxTexture","loader","resources","texture","load","_","rss","spawnBox","sprite","addChild","tl","timeline","repeatDelay","alpha","Forklift","orientation","northEast","southEast","southWest","northWest","BigRacks","forkliftRef","forkliftOrientation","setForkliftOrientation","forkliftLane","setForkliftLane","onStart","zIndex","name","PixiPlugin","registerPIXI","Main","viewportRef","selectedSituation","setSelectedSituation","answers","setAnswers","canvasWidth","setCanvasWidth","canvasHeight","setCanvasHeight","resize","min","window","innerWidth","outerWidth","innerHeight","outerHeight","addEventListener","removeEventListener","moveCenter","blur","autoPlay","selectedContent","renderMarker","contentItem","pointerdown","handleMarkerClick","transparent","answer","copy","IntroModal","App","intro","setIntro","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.676ebb40.chunk.js","sourcesContent":["export interface ISituations {\n  [name: string]: ISituation\n}\n  \nexport interface ISituation {\n  header: string;\n  description: string;\n  options: string[];\n}\n\nexport enum ContentType {\n  youtube = \"youtube\",\n  options = \"options\",\n  iframe = \"iframe\",\n  conflict = \"conflict\",\n}\n  \nexport interface IContent<T extends YoutubeContent | OptionsContent | IframeContent | ConflictContent> {\n  position: number[];\n  type: ContentType;\n  header: string;\n  content: T;\n}\n\nexport type AnyContent = IContent<YoutubeContent> | IContent<OptionsContent> | IContent<IframeContent> | IContent<ConflictContent>;\n\nexport interface YoutubeContent {\n  url: string;\n}\n\nexport interface IframeContent {\n  url: string;\n  height?: number | string;\n}\n\nexport interface OptionsContent {\n  description: string;\n  bannerImg: string;\n  options: string[];\n  correctAnswers: number[];\n}\nexport interface ConflictContent {\n  description: string;\n  situationImg: string;\n  situationSpeech: string;\n  situationBalloonClass?: string;\n  options: string[];\n  reactions: { correct: boolean, text: string, image: string }[];\n}\n","import rawJson from './content.json';\nimport { IContent, ContentType, OptionsContent, YoutubeContent, IframeContent, ConflictContent, AnyContent } from '../common/constants';\n\nconst parsed = rawJson.map((json) => {\n  const type: ContentType = (ContentType as any)[json.type];\n  switch (type) {\n    case ContentType.options: \n      return json as any as IContent<OptionsContent>;\n    case ContentType.youtube: \n      return json as any as IContent<YoutubeContent>;\n    case ContentType.iframe: \n      return json as any as IContent<IframeContent>;\n    case ContentType.conflict: \n      return json as any as IContent<ConflictContent>;\n  }\n});\nexport default parsed as AnyContent[];","import React, { useRef, useEffect, useState } from 'react';\nimport { Sprite } from '@inlet/react-pixi';\nimport * as PIXI from 'pixi.js';\nimport { CustomBounce } from 'gsap/all';\nimport { gsap } from 'gsap'\n\n\nconst CAN_DRAG = true;\ninterface Props {\n    position?: PIXI.Point;\n    delay?: number; // Wait this long before showing\n    bounce?: boolean;\n}\n\nconst Marker = (props: Props & React.ComponentProps<typeof Sprite>) => {\n    const ref = useRef<PIXI.Sprite>(null);\n    const data = useRef<PIXI.interaction.InteractionData>();\n    const [position, setPosition] = useState<PIXI.Point>(props.position || new PIXI.Point());\n    const popInDuration = 1;\n\n    useEffect(() => {\n        // Pop in animation!\n        gsap.from(ref.current, { \n          duration: popInDuration,\n          ease: \"elastic.out(2, 0.5)\",\n          pixi: { \n            visible: false,\n            scale: .1, \n          }\n        }).delay(props.delay || 0);\n    }, [props.delay]);\n\n    useEffect(() => {\n        let bounceAnim: gsap.core.Tween;\n        // Bounce animation!\n        if (props.bounce !== false) {\n            bounceAnim = gsap.to(ref.current, { \n                duration: .5,\n                yoyo: true,\n                repeat: -1,\n                pixi: { \n                  y: '-=40', \n                }\n              }).delay(popInDuration + Math.random());      \n        }\n        return () => {\n            bounceAnim.kill();\n        }\n    }, [props.bounce]);\n\n    const onDragStart = (event: PIXI.interaction.InteractionEvent) => {\n        if (!CAN_DRAG) return;\n        // store a reference to the data\n        // the reason for this is because of multitouch\n        // we want to track the movement of this particular touch\n        data.current = event.data;\n        event.stopPropagation(); // Stop dragging the map!\n    }\n    \n    const onDragEnd = () => {\n        data.current = undefined;\n        console.log(position);\n    }\n    \n    const onDragMove = () => {\n        if (!CAN_DRAG) return;\n        if (data.current)\n        {\n            const newPosition = data.current.getLocalPosition(ref.current!.parent);\n            setPosition(newPosition);\n        }\n    }\n    \n    return (\n        <Sprite \n            { ...props }\n            anchor={[0.5, 0.5]}\n            position={position}\n            ref={ref}\n            interactive={true}\n            image={`${process.env.PUBLIC_URL}/images/ui/marker.svg`}\n            mousedown={onDragStart}\n            touchstart={onDragStart}\n            mouseup={onDragEnd}\n            mouseupoutside={onDragEnd}\n            mousemove={onDragMove}\n            touchmove={onDragMove}\n        />\n    );\n}\n\nexport default Marker;","import React from 'react';\nimport { YoutubeContent } from '../../common/constants';\nimport ReactPlayer from \"react-player\";\n\ninterface Props {\n  content: YoutubeContent;\n}\n\nconst YoutubeModalContent = (props: Props) => {\n  const {content} = props;\n  return (\n    <ReactPlayer\n      url={content.url}\n      width=\"100%\"\n    /> \n  )\n}\n\nexport default YoutubeModalContent;","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"style\", {\n  type: \"text/css\"\n}, \"\\n\\t.st0{fill:none;stroke:#3FA548;stroke-width:32;}\\n\");\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"defs\", null);\n\nvar _ref4 = /*#__PURE__*/React.createElement(\"g\", {\n  id: \"Page-1\"\n}, /*#__PURE__*/React.createElement(\"polyline\", {\n  id: \"checkmark\",\n  className: \"st0\",\n  points: \"11.33,88.97 88.95,166.87 244.67,11.32  \"\n}));\n\nvar SvgCheck = function SvgCheck(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    id: \"m-check-mark\",\n    x: \"0px\",\n    y: \"0px\",\n    width: \"255.97px\",\n    height: \"189.51px\",\n    viewBox: \"0 0 255.97 189.51\",\n    style: {\n      enableBackground: \"new 0 0 255.97 189.51\"\n    },\n    xmlSpace: \"preserve\",\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref2, _ref3, _ref4);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgCheck, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/check.81786b3c.svg\";\nexport { ForwardRef as ReactComponent };","import React, { useState } from 'react';\nimport { OptionsContent } from '../../common/constants';\nimport { ReactComponent as CheckSvg } from './../../images/ui/check.svg';\n\ninterface Props {\n  content: OptionsContent;\n}\n\nconst OptionsModalContent = (props: Props) => {\n  const {content} = props;\n  const [selectedOption, selectOption] = useState<number | null>(null);\n\n  return (\n    <div className=\"modal-content modal-options\">\n      <p>\n        {content.description}\n      </p>\n      <div className=\"banner\" style={{ backgroundImage: `url(${process.env.PUBLIC_URL}/${content.bannerImg})`}}></div>\n      <ul className=\"options\">\n        {content.options.map((option, index) => (\n          <li key={option} className={index === selectedOption ? \"active\" : \"\"} onClick={() => selectOption(index)} >\n            <div className=\"checkbox\">\n              <CheckSvg className=\"check\" />\n            </div>\n            <div className=\"text\">\n              {option}\n            </div>\n          </li>\n        ))}\n      </ul>\n      <button disabled={selectedOption === null} >\n        <b>Okay</b>\n      </button>\n    </div>\n  )\n}\n\nexport default OptionsModalContent;\n\n","import React, { useState } from 'react';\nimport { IframeContent } from '../../common/constants';\n\ninterface Props {\n  content: IframeContent;\n}\n\nconst IframeModalContent = (props: Props) => {\n  const {content} = props;\n  \n  return (\n    <iframe\n      title=\"21cc game\"\n      src={content.url}\n      width=\"100%\"\n      height={content.height}\n    /> \n  )\n}\n\nexport default IframeModalContent;\n\n","import React, { useState, useEffect, useRef, useMemo } from 'react';\nimport { ConflictContent } from '../../common/constants';\nimport { ReactComponent as CheckSvg } from './../../images/ui/check.svg';\nimport { gsap, Linear } from 'gsap'\nimport { TextPlugin } from 'gsap/all';\nimport \"./conflictModal.css\";\nimport sound from 'pixi-sound';\n\ngsap.registerPlugin(TextPlugin);\n\ninterface Props {\n  content: ConflictContent;\n  setCorrectAnswer: (index: number) => void;\n  selectedAnswer?: number; // When answer has been set correctly before\n}\n\nconst ConflictModalContent = (props: Props) => {\n  const {content, selectedAnswer = null} = props;\n  const [selectedOption, selectOption] = useState<number | null>(selectedAnswer);\n  const balloonTextRef = useRef(null);\n  const ref = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    if (selectedOption === null) {\n      gsap.to(balloonTextRef.current, {\n        delay: 1,\n        duration: 2,\n        text: {\n          value: content.situationSpeech, \n          oldClass: \"hidden\",\n          newClass: \"visible\"\n        },\n        ease: Linear.easeNone,\n      });\n    }\n  }, [content.situationSpeech, selectedOption]);\n\n  const handleOptionClick = (element: HTMLLIElement, index: number) => {\n    element.className = \"animating\";\n    //selectOption(index);\n    if (!ref.current) return;\n\n    // Fade out the non selected options\n    const otherOptions = ref.current!.querySelectorAll(\".options .normal\");\n    gsap.to(otherOptions, {\n      duration: 0.5,\n      opacity: 0,\n      ease: Linear.easeNone,\n    });\n\n    // Move current option to top\n    var parentTop = ref.current!.querySelector(\".options\")!.getBoundingClientRect().top; // Initial parent's top distance from the top of the viewport;\n    var childTop = element.getBoundingClientRect().top;\n    var distance = Math.abs(parentTop - childTop);\n    gsap.to(element, {\n      duration: 0.5,\n      top: -distance,\n      ease: Linear.easeNone,\n      onComplete: () => {\n        setTimeout(() => {\n          element.className = \"\";\n          selectOption(index);\n        }, 250);\n      }\n    });\n    if ( props.content.reactions[index].correct) {\n      sound.play('correct');\n      props.setCorrectAnswer(index);\n    } else {\n      sound.play('wrong');\n    }\n\n  };\n\n  useEffect(() => {\n    sound.add('correct', `${process.env.PUBLIC_URL}/sound/correct.mp3`);    \n    sound.add('wrong', `${process.env.PUBLIC_URL}/sound/wrong.mp3`);\n  }, [])\n\n\n  const handleReplay = () => {\n    selectOption(null);\n  }\n\n  // Reaction based on current selection\n  const reaction = useMemo(() => {\n    if (selectedOption === null) return null;\n    return props.content.reactions[selectedOption];\n  }, [props.content.reactions, selectedOption])\n\n  const renderOption = (option: string, index: number) => {\n    if (selectedOption === null) {\n      // Nothing selected, render all\n      return (\n        <li key={option} className=\"normal\" onClick={(e) => handleOptionClick(e.currentTarget, index)} >\n          <div className=\"checkbox\"/>\n          <div className=\"text\">\n            {option}\n          </div>\n        </li>\n      );\n    }\n    if (selectedOption === index) {\n      // Render only selected option\n      const className = reaction?.correct ? \"correct\" : \"wrong\";\n      return (\n        <li key={option} className={className} >\n          <div className=\"checkbox\">\n            <CheckSvg className=\"check\" />\n          </div>\n          <div className=\"text\">\n            {option}\n          </div>\n        </li>\n      );\n    }\n  }\n\n  const renderRightside = () => {\n    if (!reaction) {\n      return (\n        <>\n          <div className={`balloon ${content.situationBalloonClass}`} >\n            <span ref={balloonTextRef}>{content.situationSpeech}</span>\n          </div>\n          <div className=\"situation\" style={{ backgroundImage: `url(${process.env.PUBLIC_URL}/${content.situationImg})`}} />\n        </>\n      )  \n    }\n    return (\n      <div className=\"situation\" style={{ backgroundImage: `url(${process.env.PUBLIC_URL}/${reaction.image})`}} />\n    )\n  }\n\n  return (\n    <div className=\"modal-content modal-conflict\" ref={ref}>\n      <div className=\"left\">\n        <p>\n          {content.description}\n        </p>\n        <ul className=\"options\">\n          {content.options.map((option, index) => renderOption(option, index))}\n        </ul>\n        { reaction && (\n          <>\n          <div className=\"reaction-text\">\n            {reaction.text}\n          </div>\n          { (!reaction?.correct) && (\n            <button onClick={handleReplay} className=\"replay\">\n               Replay\n            </button>\n          )}\n          </>\n        )}\n      </div>\n      <div className=\"right\">\n        {renderRightside()}\n      </div>\n    </div>\n  )\n}\n\nexport default ConflictModalContent;\n\n","import React from \"react\";\nimport { PixiComponent, applyDefaultProps, Container, useApp, Sprite } from \"@inlet/react-pixi\";\nimport * as PIXI  from 'pixi.js';\n\n\nexport enum Orientation {\n  northEast,\n  southEast,\n  southWest,\n  northWest,\n}\n\ninterface Props  {\n    orientation: Orientation;\n};\n\nconst Forklift = React.forwardRef<PIXI.Container, any>((props: Props & React.ComponentProps<typeof Container>, ref) => {\n  return (\n    <Container {...props} ref={ref}>\n      { props.orientation === Orientation.northEast && <Sprite image={`${process.env.PUBLIC_URL}/images/map/forklift-up.png`}  anchor={[0.5, 0]}/>}\n      { props.orientation === Orientation.southEast && <Sprite image={`${process.env.PUBLIC_URL}/images/map/forklift-down.png`} anchor={[0.5, 0]} />}\n      { props.orientation === Orientation.southWest && <Sprite image={`${process.env.PUBLIC_URL}/images/map/forklift-down.png`} scale={[-1, 1]} anchor={[0.5, 0]}/>}\n      { props.orientation === Orientation.northWest && <Sprite image={`${process.env.PUBLIC_URL}/images/map/forklift-up.png`} scale={[-1, 1]} anchor={[0.5, 0]}/>}\n    </Container>\n  )\n});\n\nexport default Forklift;","import React from 'react';\nimport ReactModal from 'react-modal';\nimport './modal.css';\nimport { AnyContent, ContentType, YoutubeContent, OptionsContent, IframeContent, ConflictContent } from '../../common/constants';\nimport YoutubeModalContent from './YoutubeModalContent';\nimport OptionsModalContent from './OptionsModalContent';\nimport IframeModalContent from './IFrameModalContent';\nimport ConflictModalContent from './ConflictModalContent';\n\ninterface Props {\n  content: AnyContent;\n  onClose: () => void;\n  setCorrectAnswer: (answer: number) => void;\n  selectedAnswer?: number;\n}\n\nconst ContentModal = (props: Props) => {\n  const { content, onClose, setCorrectAnswer, selectedAnswer } = props;\n\n  const handleClose = () => {\n    onClose();\n  };\n\n  const renderContent = () => {\n    switch(content.type) {\n      case ContentType.youtube: \n        return <YoutubeModalContent content={content.content as YoutubeContent} />;\n      case ContentType.options: \n        return <OptionsModalContent content={content.content as OptionsContent} />;\n      case ContentType.iframe: \n        return <IframeModalContent content={content.content as IframeContent} />;\n      case ContentType.conflict: \n        return <ConflictModalContent content={content.content as ConflictContent} setCorrectAnswer={setCorrectAnswer} selectedAnswer={selectedAnswer} />;\n    }\n  }\n\n  return (\n    <ReactModal\n      isOpen={true}\n      ariaHideApp={false}\n      overlayClassName=\"modal-overlay\"\n      className=\"modal\"\n      onRequestClose={handleClose}\n    >\n      <>\n        <div className=\"header\">\n          <h1>{content.header} </h1>\n          <div className=\"modal-close\" onClick={() => handleClose()}></div>\n        </div>\n        {renderContent()}\n      </>\n    </ReactModal>  \n  )\n}\n\nexport default ContentModal;\n\n","import React from \"react\";\nimport { Viewport as PixiViewport, ClickEventData } from \"pixi-viewport\";\nimport { PixiComponent, useApp } from \"@inlet/react-pixi\";\n\ninterface Props {\n  children: React.ReactNode;\n  onClick?(event: ClickEventData): void;\n  screenWidth: number,\n  screenHeight: number,\n  worldWidth: number,\n  worldHeight: number,\n  minScale?: number;\n  maxScale?: number;\n}\n\n/** Viewport leverages pixi-viewport to create a pannable map \n * https://davidfig.github.io/pixi-viewport/jsdoc/\n */\nconst Viewport = React.forwardRef<PixiViewport, any>((props, ref) => {\n  const app = useApp();\n  if (app) {\n      // Perhaps this is better moved somewhere else\n      const cursor = `url('${process.env.PUBLIC_URL}/img/cursors/dwarven_gauntlet_extra_6.png'), auto`;\n      app.renderer.plugins.interaction.cursorStyles.pointer = cursor;\n  }\n  return <PixiComponentViewport app={app} {...props} ref={ref} />;  \n})\n\ninterface PixiComponentProps {\n    app: PIXI.Application;\n}\n\nconst PixiComponentViewport = PixiComponent(\"Viewport\", {\n  create: (props: PixiComponentProps & Props) => {\n    const viewport = new PixiViewport({\n      screenWidth: props.screenWidth,\n      screenHeight: props.screenHeight,\n      worldWidth: props.worldWidth,\n      worldHeight: props.worldHeight,\n      ticker: props.app.ticker,\n      interaction: props.app.renderer.plugins.interaction,\n      // the interaction module is important for wheel to work properly when renderer.view is placed or scaled\n    });\n\n    const { \n      minScale = .5, \n      maxScale = 1 \n    } = props;\n    \n    viewport\n      .drag()\n      .pinch()\n      .wheel()\n      .clamp({ direction: 'all' })\n      .clampZoom({ minScale, maxScale })\n      .decelerate();\n\n    return viewport;\n  },\n});\nexport default Viewport;\n","import React, { useRef, useEffect, useState } from 'react';\nimport { Sprite, Container, useApp } from '@inlet/react-pixi';\nimport * as PIXI from 'pixi.js';\nimport { gsap, Linear } from 'gsap'\n\nconst boxImagePath = `${process.env.PUBLIC_URL}/images/map/conveyor-box.png`;\n\nconst Conveyor = (props: React.ComponentProps<typeof Container>) => {\n  const boxContainerRef = useRef<PIXI.Container>(null);\n  const [boxTexture, setBoxTexture] = useState<PIXI.Texture>();\n  const app = useApp();\n\n  useEffect(() => {\n    if (!app.loader.resources[boxImagePath]) {\n      app.loader.add(boxImagePath)\n      .load((_, rss) => {\n        setBoxTexture(rss[boxImagePath]!.texture);\n      })\n    } else {\n      setBoxTexture(app.loader.resources[boxImagePath]!.texture);\n    }\n  }, [app]);\n\n  useEffect(() => {\n    if (!boxTexture) return;\n\n    const spawnBox = (delay: number) => {\n      const sprite = new PIXI.Sprite(boxTexture);\n      boxContainerRef.current?.addChild(sprite);\n      sprite.x = 568;\n      sprite.y = 160;\n\n      const tl = gsap.timeline({\n        delay,\n        repeat: -1, \n        repeatDelay: 1\n      });\n      tl.to(sprite, {\n        ease: Linear.easeNone,\n        pixi: { \n          x: 956,\n          y: 256\n        }, \n        duration: 5\n      });\n      tl.to(sprite, {\n        ease: Linear.easeNone,\n        pixi: { \n          x: 959,\n          y: 278\n        }, \n        duration: .5\n      });\n      tl.to(sprite, {\n        ease: Linear.easeNone,\n        pixi: { \n          x: 541,\n          y: 473\n        }, \n        duration: 6\n      });\n      tl.to(sprite, {\n        delay: 1,\n        ease: Linear.easeNone,\n        pixi: { \n          alpha: 0\n        }, \n        duration: 1\n      });\n\n      // const duration = 3;\n      // gsap.to(sprite, { \n      //   duration,\n      //   ease: Linear.easeNone,\n      //   pixi: { \n      //     //visible: false,\n      //     x: boxMovePath[1][0], \n      //     y: boxMovePath[1][1],\n      //   }\n      // });\n    }\n\n    spawnBox(0);\n    spawnBox(3);\n    spawnBox(5.5);\n    spawnBox(7);\n    spawnBox(9.5);\n  }, [boxTexture]);\n\n  return (\n    <Container {...props}>\n      <Sprite image={`${process.env.PUBLIC_URL}/images/map/rack-small.png`} />\n      <Sprite image={`${process.env.PUBLIC_URL}/images/map/conveyor-right.png`} x={87} y={152} />\n      <Sprite image={`${process.env.PUBLIC_URL}/images/map/rack-small.png`} x={160} y={39} />\n      <Sprite image={`${process.env.PUBLIC_URL}/images/map/conveyor-right.png`} x={251} y={192} />\n      \n      <Sprite image={`${process.env.PUBLIC_URL}/images/map/conveyor-left.png`} x={520} y={234} />\n      <Container ref={boxContainerRef}>\n\n      </Container>\n      {/* <Sprite image={`${process.env.PUBLIC_URL}/images/map/conveyor-box.png`} x={568} y={160} name=\"box1\" />\n      <Sprite image={`${process.env.PUBLIC_URL}/images/map/conveyor-box.png`} x={956} y={267} name=\"box2\" /> */}\n      \n      <Sprite image={`${process.env.PUBLIC_URL}/images/map/rack-small.png`} x={320} y={78} />\n      \n      {/* 956,267 */}\n    </Container>\n  );\n}\n\nexport default Conveyor;","import React, { useRef, useEffect, useState } from 'react';\nimport { Sprite, Container } from '@inlet/react-pixi';\nimport Forklift, { Orientation } from './Forklift';\nimport { gsap, Linear } from 'gsap'\n\nconst BigRacks = (props: React.ComponentProps<typeof Container>) => {\n  const forkliftRef = useRef<PIXI.Container>(null);\n  const [forkliftOrientation, setForkliftOrientation] = useState<Orientation>(Orientation.southWest);\n  const [forkliftLane, setForkliftLane] = useState<number>(1); // lane 1 is furthest away, lane 2 is closest by\n\n  useEffect(() => {\n    const tl = gsap.timeline({\n      repeat: -1, \n      repeatDelay: 1\n    });\n    tl.to(forkliftRef.current, {\n      onStart: () => { setForkliftOrientation(Orientation.southEast); setForkliftLane(1) },\n      ease: Linear.easeNone,\n      pixi: { \n        x: 1135,\n        y: 148\n      }, \n      duration: 5\n    });\n    tl.to(forkliftRef.current, {\n      onStart: () => { setForkliftOrientation(Orientation.southWest); setForkliftLane(0)},\n      ease: Linear.easeNone,\n      pixi: { \n        x: 782,\n        y: 330\n      }, \n      duration: 3.5\n    });\n    tl.to(forkliftRef.current, {\n      onStart: () => { setForkliftOrientation(Orientation.northWest); setForkliftLane(3)},\n      ease: Linear.easeNone,\n      pixi: { \n        x: 42,\n        y: 130\n      }, \n      duration: 5\n    });\n    tl.to(forkliftRef.current, {\n      onStart: () => { setForkliftOrientation(Orientation.northEast); setForkliftLane(0)},\n      ease: Linear.easeNone,\n      pixi: { \n        x: 306,\n        y: 58\n      }, \n      duration: 2\n    });\n    tl.to(forkliftRef.current, {\n      onStart: () => { setForkliftOrientation(Orientation.southEast); setForkliftLane(2)},\n      ease: Linear.easeNone,\n      pixi: { \n        x: 906,\n        y: 241\n      }, \n      duration: 4\n    });\n    tl.to(forkliftRef.current, {\n      onStart: () => { setForkliftOrientation(Orientation.southWest); setForkliftLane(0)},\n      ease: Linear.easeNone,\n      pixi: { \n        x: 782,\n        y: 330\n      }, \n      duration: 2\n    });\n    tl.to(forkliftRef.current, {\n      onStart: () => { setForkliftOrientation(Orientation.northWest); setForkliftLane(3)},\n      ease: Linear.easeNone,\n      pixi: { \n        x: 42,\n        y: 130\n      }, \n      duration: 5\n    });\n    console.log(forkliftRef.current?.zIndex);\n  }, []);\n\n  /** note, this z order stuff friggin blows */\n  return (\n    <Container {...props}>\n      <Sprite image={`${process.env.PUBLIC_URL}/images/map/rack-big.png`} x={385} y={-172} />\n      <Sprite image={`${process.env.PUBLIC_URL}/images/map/rack-big.png`} x={191} y={-84} />\n\n      <Forklift orientation={forkliftOrientation} ref={forkliftRef} x={484} y={72} />\n      { forkliftLane === 1 && <Sprite image={`${process.env.PUBLIC_URL}/images/map/rack-big.png`} x={385} y={-172} />}\n      { forkliftLane > 0 && forkliftLane < 3 && <Sprite image={`${process.env.PUBLIC_URL}/images/map/rack-big.png`} x={191} y={-84} />}\n\n\n      <Sprite image={`${process.env.PUBLIC_URL}/images/map/rack-big.png`} y={0} x={0} name=\"racks closest\"/>\n    </Container>\n  );\n}\n\nexport default BigRacks;","import React, { useState, useRef, useEffect, useMemo } from \"react\";\nimport { Viewport as PixiViewport } from \"pixi-viewport\";\nimport { AnyContent } from \"../common/constants\";\nimport sound from 'pixi-sound';\nimport Marker from \"./pixi/Marker\";\nimport { Stage, Sprite } from \"@inlet/react-pixi\";\nimport ContentModal from \"./contentModal\";\nimport Viewport from \"./pixi/Viewport\";\nimport * as PIXI from 'pixi.js';\nimport { PixiPlugin } from 'gsap/all';\nimport { gsap } from 'gsap'\nimport Conveyor from \"./pixi/Conveyor\";\nimport BigRacks from \"./pixi/BigRacks\";\n\nPixiPlugin.registerPIXI(PIXI);\ngsap.registerPlugin(PixiPlugin);\n\nif (process.env.NODE_ENV === \"development\") {\n  // @ts-ignore\n  window.__PIXI_INSPECTOR_GLOBAL_HOOK__ && window.__PIXI_INSPECTOR_GLOBAL_HOOK__.register({ PIXI: PIXI });\n}\n\ninterface Props {\n  content: AnyContent[];\n}\n\nconst Main = (props: Props) => {\n  const { content } = props;\n  const viewportRef = useRef<PixiViewport>(null);\n  const [selectedSituation, setSelectedSituation] = useState<number | null>(null);\n  const [answers, setAnswers] = useState<number[]>([]);\n\n  const worldWidth = 3497;\n  const worldHeight = 1419;\n  //const scaleFactor = 1.86875; //scaled the original map up\n\n  const [canvasWidth, setCanvasWidth] = useState(1200);\n  const [canvasHeight, setCanvasHeight] = useState(600);\n\n  useEffect(() => {\n    // This will set the dimensions of the canvas to that of the window\n    const resize = () => {\n      const width = Math.min(window.innerWidth, window.outerWidth);\n      const height = Math.min(window.innerHeight, window.outerHeight);\n      setCanvasWidth(width);\n      setCanvasHeight(height); \n    }\n    resize();\n\n    window.addEventListener(\"resize\", resize);\n    return () => {\n      window.removeEventListener(\"resize\", resize);\n    };\n  }, []);\n\n  useEffect(() => {\n    // Center the map\n    if (viewportRef.current) {\n      const viewport = viewportRef.current;\n      viewport.moveCenter(worldWidth / 2, worldHeight / 2);  \n      viewport.scale = new PIXI.Point(0.5, 0.5);\n    }\n  }, [canvasWidth, canvasHeight]);\n\n  useEffect(() => {\n    // Blur the map when situation is selected\n    if (selectedSituation) {\n      gsap.to(viewportRef.current, {duration: .5, pixi: {blur:20}});\n    } else {\n      gsap.to(viewportRef.current, {duration: .5, pixi: {blur:0}});\n    }\n  }, [selectedSituation]);\n\n  useEffect(() => {\n    sound.add('plops', {\n      url: `${process.env.PUBLIC_URL}/sound/plops.wav`,\n      autoPlay: true,\n    });    \n  }, []);\n\n  const handleMarkerClick = (content: AnyContent, index: number) => {\n    setSelectedSituation(index);\n  }\n\n  const handleClose = () => {\n    setSelectedSituation(null);\n  }\n\n  const handleCorrectAnswer = (answer: number) => {\n    // gets called from within modal once the correct answer is selected\n    const copy = [...answers];\n    copy[selectedSituation!] = answer;\n\n    setAnswers(copy);\n  }\n\n  const selectedContent = useMemo(() => {\n    if (selectedSituation === null) {\n      return null;\n    }\n    return content?.[selectedSituation];\n  }, [content, selectedSituation]);\n  \n  const renderMarker = (contentItem: AnyContent, index: number) => {\n    const delay = index * 0.5;\n    const position = new PIXI.Point(contentItem.position[0], contentItem.position[1]);\n    const bounce = !answers.hasOwnProperty(index);\n\n    return (\n      <Marker \n        position={position} \n        pointerdown={() => handleMarkerClick(contentItem, index)}\n        delay={delay}\n        bounce={bounce} \n      />\n    ); \n  }\n\n  return (\n    <>\n      <Stage width={canvasWidth} height={canvasHeight} options={{transparent: true}} >\n      <Viewport screenWidth={canvasWidth} screenHeight={canvasHeight} worldWidth={worldWidth} worldHeight={worldHeight} ref={viewportRef} >\n        <Sprite image={`${process.env.PUBLIC_URL}/images/map/warehouse-back.png`} >\n          <BigRacks x={1153} y={207} />\n          <Sprite image={`${process.env.PUBLIC_URL}/images/map/safe.png`} x={2086} y={296} />\n          <Sprite image={`${process.env.PUBLIC_URL}/images/map/middle.png`} x={806} y={334} />\n\n          <Conveyor name={\"Conveyor\"} x={269} y={498} />\n          <Sprite image={`${process.env.PUBLIC_URL}/images/map/packing.png`} x={995} y={848} name=\"packing-table\"/>\n\n          <Sprite image={`${process.env.PUBLIC_URL}/images/map/warehouse-front-wall.png`} y={705} name=\"front-wall\"/>\n          {content.map((contentItem, index) => renderMarker(contentItem, index))}\n        </Sprite>\n      </Viewport>\n    </Stage>\n    { selectedContent && (\n      <ContentModal \n        content={selectedContent} \n        onClose={handleClose} \n        setCorrectAnswer={handleCorrectAnswer}\n        selectedAnswer={(answers[selectedSituation!])}\n      /> \n    )}\n\n    </>\n  )\n};\n\nexport default Main;","import React from 'react';\nimport ReactModal from 'react-modal';\nimport './introModal.css';\n\ninterface Props {\n  onClose: () => void;\n}\n\nconst IntroModal = (props: Props) => {\n  return (\n    <ReactModal\n      isOpen={true}\n      ariaHideApp={false}\n      overlayClassName=\"modal-overlay modal-intro-overlay\"\n      className=\"modal modal-intro\"\n      onRequestClose={props.onClose}\n    >\n      <div onClick={props.onClose}>\n        <h1 className=\"header\">Louwman demo</h1>\n        <p>\n          Er kan van alles gebeuren in het distributiecentrum. \n        </p>\n      </div>\n    </ReactModal>  \n    )\n}\n\nexport default IntroModal;\n","import React, { useRef, useEffect, useState } from 'react';\nimport * as PIXI from 'pixi.js';\nimport { Stage, Sprite } from '@inlet/react-pixi';\nimport Viewport from './components/pixi/Viewport';\nimport { Viewport as PixiViewport } from \"pixi-viewport\";\nimport Marker from './components/pixi/Marker';\nimport { PixiPlugin } from 'gsap/all';\nimport { gsap } from 'gsap'\nimport './App.css';\nimport ParticleEmitter from './components/pixi/ParticleEmitter';\nimport smoke from './smoke.json';\nimport content from './content/parseContent';\nimport { AnyContent } from './common/constants';\nimport ContentModal from './components/contentModal';\nimport Main from './components/Main';\nimport IntroModal from './components/introModal/introModal';\n\n\n\nfunction App() {\n\n\n  // const handleChooseOption = (option: number) => {\n  //   setsituationOrder([\n  //     ...situationOrder,\n  //     selectedSituation!\n  //   ])\n  // }\n\n  /*useEffect(() => {\n    // The forklift drives a square\n    const forklift = forkliftRef!.current!;\n    var tl = gsap.timeline({repeat: -1, repeatDelay: 1});\n    tl.to(forklift, {\n      pixi: { \n        x: 1143 * scaleFactor,\n        y: 667 * scaleFactor\n      }, \n      duration: 5\n    });\n    tl.to(forklift, {\n      pixi: { \n        x: 1423 * scaleFactor,\n        y: 545 * scaleFactor\n      }, \n      duration: 2\n    });\n    tl.to(forklift, {\n      pixi: { \n        x: 750 * scaleFactor,\n        y: 347 * scaleFactor,\n      }, \n      duration: 2\n    });\n    tl.to(forklift, {\n      onStart: () => { forklift.scale = new PIXI.Point(-1, 1) },\n      onComplete: () => { forklift.scale = new PIXI.Point(1, 1) },\n      pixi: { \n        x: 477 * scaleFactor,\n        y: 510 * scaleFactor\n      }, \n      duration: 2\n    });\n  }, []);*/\n\n  // const renderMarker = (situation: string, position: PIXI.Point, delay: number) => {\n  //   if (situationOrder.some(s => s === situation)) {\n  //     return null;\n  //   }\n  //   return <Marker position={position} pointerdown={() => handleMarkerClick(situation)} delay={delay} />\n  // }\n\n  const [intro, setIntro] = useState(true);\n\n  return (\n    <>\n      { intro && (<IntroModal onClose={() => {setIntro(false)}} />)}\n      { !intro && <Main content={content}/> }\n    </>  \n  )\n};\n\nexport default App;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}