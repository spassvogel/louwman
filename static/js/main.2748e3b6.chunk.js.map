{"version":3,"sources":["common/constants.ts","content/parseContent.ts","components/contentModal/YoutubeModalContent.tsx","images/ui/check.svg","components/contentModal/OptionsModalContent.tsx","components/contentModal/IFrameModalContent.tsx","components/contentModal/ConflictModalContent.tsx","components/contentModal/TextModalContent.tsx","components/contentModal/index.tsx","components/pixi/Viewport.tsx","components/Main.tsx","components/introModal/introModal.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["ContentType","parsed","rawJson","map","json","type","options","youtube","iframe","conflict","YoutubeModalContent","props","content","url","width","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","_ref2","createElement","_ref3","_ref4","id","className","points","_ref","svgRef","title","x","y","height","viewBox","style","enableBackground","xmlSpace","ref","ForwardRef","forwardRef","OptionsModalContent","useState","selectedOption","selectOption","description","backgroundImage","process","bannerImg","option","index","onClick","disabled","IframeModalContent","src","gsap","registerPlugin","TextPlugin","ConflictModalContent","selectedAnswer","balloonTextRef","useRef","useEffect","to","current","delay","duration","text","value","situationSpeech","oldClass","newClass","ease","Linear","easeNone","sound","add","reaction","useMemo","reactions","renderOption","e","element","otherOptions","querySelectorAll","opacity","parentTop","querySelector","getBoundingClientRect","top","childTop","distance","Math","abs","onComplete","setTimeout","correct","play","setCorrectAnswer","handleOptionClick","currentTarget","image","situationBalloonClass","situationImg","TextModalContent","ContentModal","onClose","handleClose","isOpen","ariaHideApp","overlayClassName","onRequestClose","header","renderContent","Viewport","React","app","useApp","cursor","renderer","plugins","interaction","cursorStyles","pointer","PixiComponentViewport","PixiComponent","create","viewport","PixiViewport","screenWidth","screenHeight","worldWidth","worldHeight","ticker","minScale","maxScale","drag","pinch","wheel","clamp","direction","clampZoom","decelerate","PixiPlugin","registerPIXI","PIXI","items","forklift","position","pool","Main","viewportRef","selectedSituation","answers","setAnswers","canvasWidth","setCanvasWidth","canvasHeight","setCanvasHeight","resize","min","window","innerWidth","outerWidth","innerHeight","outerHeight","addEventListener","removeEventListener","moveCenter","scale","pixi","blur","item","setItem","transparent","interactive","pointerdown","answer","copy","IntroModal","App","intro","setIntro","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.2748e3b6.chunk.js","sourcesContent":["export interface ISituations {\n  [name: string]: ISituation\n}\n  \nexport interface ISituation {\n  header: string;\n  description: string;\n  options: string[];\n}\n\nexport enum ContentType {\n  youtube = \"youtube\",\n  options = \"options\",\n  iframe = \"iframe\",\n  conflict = \"conflict\",\n  text = \"text\",\n}\n  \nexport interface IContent<T extends YoutubeContent | OptionsContent | IframeContent | ConflictContent | TextContent> {\n  position: [number, number];\n  type: ContentType;\n  header: string;\n  content: T;\n}\n\nexport type AnyContent = IContent<YoutubeContent> | IContent<OptionsContent> | IContent<IframeContent> | IContent<ConflictContent> | IContent<TextContent>;\n\nexport interface YoutubeContent {\n  url: string;\n}\n\nexport interface TextContent {\n  image: string;\n  text: string;\n}\n\nexport interface IframeContent {\n  url: string;\n  height?: number | string;\n}\n\nexport interface OptionsContent {\n  description: string;\n  bannerImg: string;\n  options: string[];\n  correctAnswers: number[];\n}\nexport interface ConflictContent {\n  description: string;\n  situationImg: string;\n  situationSpeech: string;\n  situationBalloonClass?: string;\n  options: string[];\n  reactions: { correct: boolean, text: string, image: string }[];\n}\n","import rawJson from './content.json';\nimport { IContent, ContentType, OptionsContent, YoutubeContent, IframeContent, ConflictContent, AnyContent } from '../common/constants';\n\nconst parsed = rawJson.map((json) => {\n  const type: ContentType = (ContentType as any)[json.type];\n  switch (type) {\n    case ContentType.options: \n      return json as any as IContent<OptionsContent>;\n    case ContentType.youtube: \n      return json as any as IContent<YoutubeContent>;\n    case ContentType.iframe: \n      return json as any as IContent<IframeContent>;\n    case ContentType.conflict: \n      return json as any as IContent<ConflictContent>;\n  }\n});\nexport default parsed as AnyContent[];","import React from 'react';\nimport { YoutubeContent } from '../../common/constants';\nimport ReactPlayer from \"react-player\";\n\ninterface Props {\n  content: YoutubeContent;\n}\n\nconst YoutubeModalContent = (props: Props) => {\n  const {content} = props;\n  return (\n    <ReactPlayer\n      url={content.url}\n      width=\"100%\"\n    /> \n  )\n}\n\nexport default YoutubeModalContent;","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"style\", {\n  type: \"text/css\"\n}, \"\\n\\t.st0{fill:none;stroke:#3FA548;stroke-width:32;}\\n\");\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"defs\", null);\n\nvar _ref4 = /*#__PURE__*/React.createElement(\"g\", {\n  id: \"Page-1\"\n}, /*#__PURE__*/React.createElement(\"polyline\", {\n  id: \"checkmark\",\n  className: \"st0\",\n  points: \"11.33,88.97 88.95,166.87 244.67,11.32  \"\n}));\n\nvar SvgCheck = function SvgCheck(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    id: \"m-check-mark\",\n    x: \"0px\",\n    y: \"0px\",\n    width: \"255.97px\",\n    height: \"189.51px\",\n    viewBox: \"0 0 255.97 189.51\",\n    style: {\n      enableBackground: \"new 0 0 255.97 189.51\"\n    },\n    xmlSpace: \"preserve\",\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref2, _ref3, _ref4);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgCheck, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/check.81786b3c.svg\";\nexport { ForwardRef as ReactComponent };","import React, { useState } from 'react';\nimport { OptionsContent } from '../../common/constants';\nimport { ReactComponent as CheckSvg } from './../../images/ui/check.svg';\n\ninterface Props {\n  content: OptionsContent;\n}\n\nconst OptionsModalContent = (props: Props) => {\n  const {content} = props;\n  const [selectedOption, selectOption] = useState<number | null>(null);\n\n  return (\n    <div className=\"modal-content modal-options\">\n      <p>\n        {content.description}\n      </p>\n      <div className=\"banner\" style={{ backgroundImage: `url(${process.env.PUBLIC_URL}/${content.bannerImg})`}}></div>\n      <ul className=\"options\">\n        {content.options.map((option, index) => (\n          <li key={option} className={index === selectedOption ? \"active\" : \"\"} onClick={() => selectOption(index)} >\n            <div className=\"checkbox\">\n              <CheckSvg className=\"check\" />\n            </div>\n            <div className=\"text\">\n              {option}\n            </div>\n          </li>\n        ))}\n      </ul>\n      <button disabled={selectedOption === null} >\n        <b>Okay</b>\n      </button>\n    </div>\n  )\n}\n\nexport default OptionsModalContent;\n\n","import React, { useState } from 'react';\nimport { IframeContent } from '../../common/constants';\n\ninterface Props {\n  content: IframeContent;\n}\n\nconst IframeModalContent = (props: Props) => {\n  const {content} = props;\n  \n  return (\n    <iframe\n      title=\"21cc game\"\n      src={content.url}\n      width=\"100%\"\n      height={content.height}\n    /> \n  )\n}\n\nexport default IframeModalContent;\n\n","import React, { useState, useEffect, useRef, useMemo } from 'react';\nimport { ConflictContent } from '../../common/constants';\nimport { ReactComponent as CheckSvg } from './../../images/ui/check.svg';\nimport { gsap, Linear } from 'gsap'\nimport { TextPlugin } from 'gsap/all';\nimport \"./conflictModal.css\";\nimport sound from 'pixi-sound';\n\ngsap.registerPlugin(TextPlugin);\n\ninterface Props {\n  content: ConflictContent;\n  setCorrectAnswer: (index: number) => void;\n  selectedAnswer?: number; // When answer has been set correctly before\n}\n\nconst ConflictModalContent = (props: Props) => {\n  const {content, selectedAnswer = null} = props;\n  const [selectedOption, selectOption] = useState<number | null>(selectedAnswer);\n  const balloonTextRef = useRef(null);\n  const ref = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    if (selectedOption === null) {\n      gsap.to(balloonTextRef.current, {\n        delay: 1,\n        duration: 2,\n        text: {\n          value: content.situationSpeech, \n          oldClass: \"hidden\",\n          newClass: \"visible\"\n        },\n        ease: Linear.easeNone,\n      });\n    }\n  }, [content.situationSpeech, selectedOption]);\n\n  const handleOptionClick = (element: HTMLLIElement, index: number) => {\n    element.className = \"animating\";\n    //selectOption(index);\n    if (!ref.current) return;\n\n    // Fade out the non selected options\n    const otherOptions = ref.current!.querySelectorAll(\".options .normal\");\n    gsap.to(otherOptions, {\n      duration: 0.5,\n      opacity: 0,\n      ease: Linear.easeNone,\n    });\n\n    // Move current option to top\n    var parentTop = ref.current!.querySelector(\".options\")!.getBoundingClientRect().top; // Initial parent's top distance from the top of the viewport;\n    var childTop = element.getBoundingClientRect().top;\n    var distance = Math.abs(parentTop - childTop);\n    gsap.to(element, {\n      duration: 0.5,\n      top: -distance,\n      ease: Linear.easeNone,\n      onComplete: () => {\n        setTimeout(() => {\n          element.className = \"\";\n          selectOption(index);\n        }, 250);\n      }\n    });\n    if ( props.content.reactions[index].correct) {\n      sound.play('correct');\n      props.setCorrectAnswer(index);\n    } else {\n      sound.play('wrong');\n    }\n\n  };\n\n  useEffect(() => {\n    sound.add('correct', `${process.env.PUBLIC_URL}/sound/correct.mp3`);    \n    sound.add('wrong', `${process.env.PUBLIC_URL}/sound/wrong.mp3`);\n  }, [])\n\n\n  const handleReplay = () => {\n    selectOption(null);\n  }\n\n  // Reaction based on current selection\n  const reaction = useMemo(() => {\n    if (selectedOption === null) return null;\n    return props.content.reactions[selectedOption];\n  }, [props.content.reactions, selectedOption])\n\n  const renderOption = (option: string, index: number) => {\n    if (selectedOption === null) {\n      // Nothing selected, render all\n      return (\n        <li key={option} className=\"normal\" onClick={(e) => handleOptionClick(e.currentTarget, index)} >\n          <div className=\"checkbox\"/>\n          <div className=\"text\">\n            {option}\n          </div>\n        </li>\n      );\n    }\n    if (selectedOption === index) {\n      // Render only selected option\n      const className = reaction?.correct ? \"correct\" : \"wrong\";\n      return (\n        <li key={option} className={className} >\n          <div className=\"checkbox\">\n            <CheckSvg className=\"check\" />\n          </div>\n          <div className=\"text\">\n            {option}\n          </div>\n        </li>\n      );\n    }\n  }\n\n  const renderRightside = () => {\n    if (!reaction) {\n      return (\n        <>\n          <div className={`balloon ${content.situationBalloonClass}`} >\n            <span ref={balloonTextRef}>{content.situationSpeech}</span>\n          </div>\n          <div className=\"situation\" style={{ backgroundImage: `url(${process.env.PUBLIC_URL}/${content.situationImg})`}} />\n        </>\n      )  \n    }\n    return (\n      <div className=\"situation\" style={{ backgroundImage: `url(${process.env.PUBLIC_URL}/${reaction.image})`}} />\n    )\n  }\n\n  return (\n    <div className=\"modal-content modal-conflict\" ref={ref}>\n      <div className=\"left\">\n        <p>\n          {content.description}\n        </p>\n        <ul className=\"options\">\n          {content.options.map((option, index) => renderOption(option, index))}\n        </ul>\n        { reaction && (\n          <>\n          <div className=\"reaction-text\">\n            {reaction.text}\n          </div>\n          { (!reaction?.correct) && (\n            <button onClick={handleReplay} className=\"replay\">\n               Replay\n            </button>\n          )}\n          </>\n        )}\n      </div>\n      <div className=\"right\">\n        {renderRightside()}\n      </div>\n    </div>\n  )\n}\n\nexport default ConflictModalContent;\n\n","import React from 'react';\nimport { TextContent } from '../../common/constants';\n\ninterface Props {\n  content: TextContent;\n}\n\nconst TextModalContent = (props: Props) => {\n  const {content} = props;\n  \n  return (\n    <div> { content.text } </div>\n  )\n}\n\nexport default TextModalContent;\n\n","import React from 'react';\nimport ReactModal from 'react-modal';\nimport './modal.css';\nimport { AnyContent, ContentType, YoutubeContent, OptionsContent, IframeContent, ConflictContent, TextContent } from '../../common/constants';\nimport YoutubeModalContent from './YoutubeModalContent';\nimport OptionsModalContent from './OptionsModalContent';\nimport IframeModalContent from './IFrameModalContent';\nimport ConflictModalContent from './ConflictModalContent';\nimport TextModalContent from './TextModalContent';\n\ninterface Props {\n  content: AnyContent;\n  onClose: () => void;\n  setCorrectAnswer: (answer: number) => void;\n  selectedAnswer?: number;\n}\n\nconst ContentModal = (props: Props) => {\n  const { content, onClose, setCorrectAnswer, selectedAnswer } = props;\n\n  const handleClose = () => {\n    onClose();\n  };\n\n  const renderContent = () => {\n    switch(content.type) {\n      case ContentType.youtube: \n        return <YoutubeModalContent content={content.content as YoutubeContent} />;\n      case ContentType.options: \n        return <OptionsModalContent content={content.content as OptionsContent} />;\n      case ContentType.iframe: \n        return <IframeModalContent content={content.content as IframeContent} />;\n      case ContentType.conflict: \n        return <ConflictModalContent content={content.content as ConflictContent} setCorrectAnswer={setCorrectAnswer} selectedAnswer={selectedAnswer} />;\n      case ContentType.text: \n        return <TextModalContent content={content.content as TextContent} />;\n    }\n  }\n\n  return (\n    <ReactModal\n      isOpen={true}\n      ariaHideApp={false}\n      overlayClassName=\"modal-overlay\"\n      className=\"modal\"\n      onRequestClose={handleClose}\n    >\n      <>\n        <div className=\"header\">\n          <h1>{content.header} </h1>\n          <div className=\"modal-close\" onClick={() => handleClose()}></div>\n        </div>\n        {renderContent()}\n      </>\n    </ReactModal>  \n  )\n}\n\nexport default ContentModal;\n\n","import React from \"react\";\nimport { Viewport as PixiViewport, ClickEventData } from \"pixi-viewport\";\nimport { PixiComponent, useApp } from \"@inlet/react-pixi\";\n\ninterface Props {\n  children: React.ReactNode;\n  onClick?(event: ClickEventData): void;\n  screenWidth: number,\n  screenHeight: number,\n  worldWidth: number,\n  worldHeight: number,\n  minScale?: number;\n  maxScale?: number;\n}\n\n/** Viewport leverages pixi-viewport to create a pannable map \n * https://davidfig.github.io/pixi-viewport/jsdoc/\n */\nconst Viewport = React.forwardRef<PixiViewport, any>((props, ref) => {\n  const app = useApp();\n  if (app) {\n      // Perhaps this is better moved somewhere else\n      const cursor = `url('${process.env.PUBLIC_URL}/img/cursors/dwarven_gauntlet_extra_6.png'), auto`;\n      app.renderer.plugins.interaction.cursorStyles.pointer = cursor;\n  }\n  return <PixiComponentViewport app={app} {...props} ref={ref} />;  \n})\n\ninterface PixiComponentProps {\n    app: PIXI.Application;\n}\n\nconst PixiComponentViewport = PixiComponent(\"Viewport\", {\n  create: (props: PixiComponentProps & Props) => {\n    const viewport = new PixiViewport({\n      screenWidth: props.screenWidth,\n      screenHeight: props.screenHeight,\n      worldWidth: props.worldWidth,\n      worldHeight: props.worldHeight,\n      ticker: props.app.ticker,\n      interaction: props.app.renderer.plugins.interaction,\n      // the interaction module is important for wheel to work properly when renderer.view is placed or scaled\n    });\n\n    const { \n      minScale = .5, \n      maxScale = 1 \n    } = props;\n    \n    viewport\n      .drag()\n      .pinch()\n      .wheel()\n      .clamp({ direction: 'all' })\n      .clampZoom({ minScale, maxScale })\n      .decelerate();\n\n    return viewport;\n  },\n});\nexport default Viewport;\n","import React, { useState, useRef, useEffect, useMemo } from \"react\";\nimport { Viewport as PixiViewport } from \"pixi-viewport\";\nimport { AnyContent, IContent, TextContent, ContentType } from \"../common/constants\";\nimport sound from 'pixi-sound';\nimport Marker from \"./pixi/Marker\";\nimport { Stage, Sprite } from \"@inlet/react-pixi\";\nimport ContentModal from \"./contentModal\";\nimport Viewport from \"./pixi/Viewport\";\nimport * as PIXI from 'pixi.js';\nimport { PixiPlugin } from 'gsap/all';\nimport { gsap } from 'gsap'\nimport Conveyor from \"./pixi/Conveyor\";\nimport BigRacks from \"./pixi/BigRacks\";\n\nPixiPlugin.registerPIXI(PIXI);\ngsap.registerPlugin(PixiPlugin);\n\nif (process.env.NODE_ENV === \"development\") {\n  // @ts-ignore\n  window.__PIXI_INSPECTOR_GLOBAL_HOOK__ && window.__PIXI_INSPECTOR_GLOBAL_HOOK__.register({ PIXI: PIXI });\n}\n\ninterface Props {\n  content: AnyContent[];\n}\n\nconst items:{ [name:string]: IContent<TextContent> } = {\n  forklift: {\n    position: [2539, 868],\n    type: ContentType.text,\n    header: \"Heftruck staat nog met de lepels omhoog\",\n    content: {\n      image: \"forklift-spoons-up.png\",\n      text: \"One morning, when Gregor Samsa woke from troubled dreams, he found himself transformed in his bed into a horrible vermin. He lay on his armour-like back, and if he lifted his head a little he could see his brown belly, slightly domed and divided by arches into stiff sections\",\n    }\n  },\n  pool: {\n    position: [1659, 1296],\n    type: ContentType.text,\n    header: \"Plas met vloeistof op de vloer\",\n    content: {\n      image: \"pool.png\",\n      text: \"The quick, brown fox jumps over a lazy dog. DJs flock by when MTV ax quiz prog. Junk MTV quiz graced by fox whelps. Bawds jog, flick quartz, vex nymphs. Waltz, bad nymph, for quick jigs vex! Fox nymphs grab quick-jived waltz. \",\n    }\n  }\n}\n\nconst Main = (props: Props) => {\n  const { content } = props;\n  const viewportRef = useRef<PixiViewport>(null);\n  const [selectedSituation, setSelectedSituation] = useState<number | null>(null);\n  const [answers, setAnswers] = useState<number[]>([]);\n\n  const worldWidth = 5487;\n  const worldHeight = 2707;\n  //const scaleFactor = 1.86875; //scaled the original map up\n\n  const [canvasWidth, setCanvasWidth] = useState(1200);\n  const [canvasHeight, setCanvasHeight] = useState(600);\n\n  useEffect(() => {\n    // This will set the dimensions of the canvas to that of the window\n    const resize = () => {\n      const width = Math.min(window.innerWidth, window.outerWidth);\n      const height = Math.min(window.innerHeight, window.outerHeight);\n      setCanvasWidth(width);\n      setCanvasHeight(height); \n    }\n    resize();\n\n    window.addEventListener(\"resize\", resize);\n    return () => {\n      window.removeEventListener(\"resize\", resize);\n    };\n  }, []);\n\n  useEffect(() => {\n    // Center the map\n    if (viewportRef.current) {\n      const viewport = viewportRef.current;\n      viewport.moveCenter(worldWidth / 2, worldHeight / 2);  \n      viewport.scale = new PIXI.Point(0.5, 0.5);\n    }\n  }, [canvasWidth, canvasHeight]);\n\n  useEffect(() => {\n    // Blur the map when situation is selected\n    if (selectedSituation) {\n      gsap.to(viewportRef.current, {duration: .5, pixi: {blur:20}});\n    } else {\n      gsap.to(viewportRef.current, {duration: .5, pixi: {blur:0}});\n    }\n  }, [selectedSituation]);\n\n  // useEffect(() => {\n  //   sound.add('plops', {\n  //     url: `${process.env.PUBLIC_URL}/sound/plops.wav`,\n  //     autoPlay: true,\n  //   });    \n  // }, []);\n\n  const handleMarkerClick = (content: AnyContent, index: number) => {\n    setSelectedSituation(index);\n  }\n\n  const handleClose = () => {\n    setItem(null);\n  }\n\n  const handleCorrectAnswer = (answer: number) => {\n    // gets called from within modal once the correct answer is selected\n    const copy = [...answers];\n    copy[selectedSituation!] = answer;\n\n    setAnswers(copy);\n  }\n\n  const selectedContent = useMemo(() => {\n    if (selectedSituation === null) {\n      return null;\n    }\n    return content?.[selectedSituation];\n  }, [content, selectedSituation]);\n  \n  const renderMarker = (contentItem: AnyContent, index: number) => {\n    const delay = index * 0.5;\n    const position = new PIXI.Point(contentItem.position[0], contentItem.position[1]);\n    const bounce = !answers.hasOwnProperty(index);\n\n    return (\n      <Marker \n        position={position} \n        pointerdown={() => handleMarkerClick(contentItem, index)}\n        delay={delay}\n        bounce={bounce} \n      />\n    ); \n  }\n\n  const [item, setItem] = useState<string|null>(null);\n\n  return (\n    <>\n      <Stage width={canvasWidth} height={canvasHeight} options={{transparent: true}} >\n      <Viewport screenWidth={canvasWidth} screenHeight={canvasHeight} worldWidth={worldWidth} worldHeight={worldHeight} ref={viewportRef} >\n        <Sprite image={`${process.env.PUBLIC_URL}/images/map/zalmweg.png`} >\n          {Object.keys(items).map((i) => \n            <Sprite \n              image={`${process.env.PUBLIC_URL}/images/map/${items[i].content.image}`} \n              position={items[i].position} \n              key={i} \n              interactive \n              pointerdown={() => setItem(i)} \n            />\n          )}\n        </Sprite>\n      </Viewport>\n    </Stage>\n    { item && (\n      <ContentModal \n        content={items[item] as AnyContent} \n        onClose={handleClose} \n        setCorrectAnswer={handleCorrectAnswer}\n        selectedAnswer={(answers[selectedSituation!])}\n      /> \n    )}\n\n    </>\n  )\n};\n\nexport default Main;","import React from 'react';\nimport ReactModal from 'react-modal';\nimport './introModal.css';\n\ninterface Props {\n  onClose: () => void;\n}\n\nconst IntroModal = (props: Props) => {\n  return (\n    <ReactModal\n      isOpen={true}\n      ariaHideApp={false}\n      overlayClassName=\"modal-overlay modal-intro-overlay\"\n      className=\"modal modal-intro\"\n      onRequestClose={props.onClose}\n    >\n      <div onClick={props.onClose}>\n        <h1 className=\"header\">Louwman demo</h1>\n        <p>\n          Er kan van alles gebeuren in het distributiecentrum. \n        </p>\n      </div>\n    </ReactModal>  \n    )\n}\n\nexport default IntroModal;\n","import React, { useRef, useEffect, useState } from 'react';\nimport * as PIXI from 'pixi.js';\nimport { Stage, Sprite } from '@inlet/react-pixi';\nimport Viewport from './components/pixi/Viewport';\nimport { Viewport as PixiViewport } from \"pixi-viewport\";\nimport Marker from './components/pixi/Marker';\nimport { PixiPlugin } from 'gsap/all';\nimport { gsap } from 'gsap'\nimport './App.css';\nimport ParticleEmitter from './components/pixi/ParticleEmitter';\nimport smoke from './smoke.json';\nimport content from './content/parseContent';\nimport { AnyContent } from './common/constants';\nimport ContentModal from './components/contentModal';\nimport Main from './components/Main';\nimport IntroModal from './components/introModal/introModal';\n\n\n\nfunction App() {\n\n\n  // const handleChooseOption = (option: number) => {\n  //   setsituationOrder([\n  //     ...situationOrder,\n  //     selectedSituation!\n  //   ])\n  // }\n\n  /*useEffect(() => {\n    // The forklift drives a square\n    const forklift = forkliftRef!.current!;\n    var tl = gsap.timeline({repeat: -1, repeatDelay: 1});\n    tl.to(forklift, {\n      pixi: { \n        x: 1143 * scaleFactor,\n        y: 667 * scaleFactor\n      }, \n      duration: 5\n    });\n    tl.to(forklift, {\n      pixi: { \n        x: 1423 * scaleFactor,\n        y: 545 * scaleFactor\n      }, \n      duration: 2\n    });\n    tl.to(forklift, {\n      pixi: { \n        x: 750 * scaleFactor,\n        y: 347 * scaleFactor,\n      }, \n      duration: 2\n    });\n    tl.to(forklift, {\n      onStart: () => { forklift.scale = new PIXI.Point(-1, 1) },\n      onComplete: () => { forklift.scale = new PIXI.Point(1, 1) },\n      pixi: { \n        x: 477 * scaleFactor,\n        y: 510 * scaleFactor\n      }, \n      duration: 2\n    });\n  }, []);*/\n\n  // const renderMarker = (situation: string, position: PIXI.Point, delay: number) => {\n  //   if (situationOrder.some(s => s === situation)) {\n  //     return null;\n  //   }\n  //   return <Marker position={position} pointerdown={() => handleMarkerClick(situation)} delay={delay} />\n  // }\n\n  const [intro, setIntro] = useState(true);\n\n  return (\n    <>\n      { intro && (<IntroModal onClose={() => {setIntro(false)}} />)}\n      { !intro && <Main content={content}/> }\n    </>  \n  )\n};\n\nexport default App;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}